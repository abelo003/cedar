{"version":3,"file":"cedar.min.js","sources":["../../src/cedar.js"],"names":["window","Cedar","options","self","this","opts","_events","_definition","_defaultDefinition","_view","undefined","_methodQueue","_pendingXhr","definition","Error","getJson","err","data","_purgeMethodQueue","override","specification","dataset","defaultQuery","_defaultQuery","query","_","defaults","Object","defineProperty","get","set","val","prototype","canDraw","drawable","errs","show","_addToMethodQueue","elementId","d3","select","_elementId","_renderer","renderer","token","_token","chk","issues","join","update","emit","_remove","compiledMappings","_applyDefaultsToMappings","mappings","inputs","spec","JSON","parse","_supplant","stringify","template","_mergeRecursive","url","values","_renderSpec","_createFeatureServiceRequest","cb","console","dir","ex","vg","chartCtor","el","_attach","opt","view","items","model","scene","forEach","item","datum","attributes","key","value","hasPropertySet","props","clearSelection","eventName","_handler","_handlers","handler","on","off","_validateMappings","input","missingInputs","i","length","required","name","push","_validateData","features","Array","isArray","firstRow","fld","_getMappingFieldName","field","hasOwnProperty","mappingName","fieldName","toLowerCase","defn","where","returnGeometry","returnDistinctValues","returnIdsOnly","returnCountOnly","outFields","f","evtName","evt","registeredHandler","type","callback","log","args","method","action","apply","json","message","mergedQuery","clone","bbox","geometry","bboxArr","split","xmin","ymin","xmax","ymax","inSR","group","groupByFieldsForStatistics","count","orderByFields","outStatistics","statisticType","onStatisticField","outStatisticFieldName","sort","_serializeQueryParams","tmpl","params","replace","a","b","r","_getTokenValue","obj1","obj2","p","constructor","e","tokens","tokenName","tmpTokens","tokenNameParts","str","encodeURIComponent","queryString"],"mappings":"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","sourcesContent":["/**\n * Cedar\n *\n * Generic charting / visualization library for the ArcGIS Platform\n * that leverages vega + d3 internally.\n */\n\n(function(window){\n  'use strict';\n\n/**\n * Constructor\n * @param {object} options Cedar options\n */\nvar Cedar = function Cedar(options){\n  //close over this for use in callbacks\n  var self = this;\n\n  //ensure an opts object\n  var opts = options || {};\n\n  /**\n   * Internals for holding state\n   */\n  \n\n  // Array to hold event handlers\n  this._events = [];\n\n  //initialize the internal definition hash\n  this._definition = Cedar._defaultDefinition();\n\n  //the vega view aka the chart\n  this._view = undefined;\n\n  //queue to hold methods called while\n  //xhrs are in progress\n  this._methodQueue=[];\n\n  /**\n   * Flag used to determine if the library is\n   * waiting for an xhr to return. \n   */\n  this._pendingXhr = false;\n\n  //defintion \n  if(opts.definition){\n    //is it an object or string(assumed to be url)\n    if(typeof opts.definition === 'object'){\n      //hold onto the definition\n      this._definition = opts.definition;\n    }else if(typeof opts.definition === 'string' ){ \n      //assume it's a url (relative or abs) and fetch the definition object\n      this._pendingXhr = true;\n      Cedar.getJson(opts.definition, function(err,data){\n        self._pendingXhr = false;\n        self._definition = data; \n        self._purgeMethodQueue();\n      });\n    }else{\n      throw new Error('parameter definition must be an object or string (url)');\n    }\n  }\n\n  if(opts.override) {\n    this._definition.override = opts.override;\n  }\n\n  //template\n  if(opts.specification){\n    //is it an object or string(assumed to be url)\n    if(typeof opts.specification === 'object'){\n      //hold onto the template\n      this._definition.specification = opts.specification;\n\n    }else if(typeof opts.specification === 'string' ){ \n      //assume it's a url (relative or abs) and fetch the template object\n      this._pendingXhr = true;\n      Cedar.getJson(opts.specification, function(err,data){\n        self._pendingXhr = false;\n        self._definition.specification = data; \n        self._purgeMethodQueue();\n      });\n    }else{\n      throw new Error('parameter template must be an object or string (url)');\n    }\n  }\n\n  //allow a dataset to be passed in...\n  if(opts.dataset && typeof opts.dataset === 'object'){\n    var defaultQuery = Cedar._defaultQuery();\n\n    if(!opts.dataset.query){\n      opts.dataset.query = defaultQuery;\n    }else{\n      opts.dataset.query = _.defaults(opts.dataset.query, defaultQuery);\n    }\n    //assign it\n    this._definition.dataset = opts.dataset;\n  }\n\n  /**\n   * Properties\n   *\n   * ES 5.1 syntax, so IE 8 & lower won't work\n   * \n   * If the val is a url, should we expect\n   * cedar to fetch the object? \n   * \n   * I'd say no... as that violates the principal \n   * of least suprise. Also - cedar has a .getJSON\n   * helper method the dev should use.\n   * \n   */\n      \n  Object.defineProperty(this, 'dataset', {\n    get: function() {\n        return this._definition.dataset;\n    },\n    set: function(val) {\n       this._definition.dataset = val;\n    }\n  });\n\n  Object.defineProperty(this, 'specification', {\n    get: function() {\n        return this._definition.specification;\n    },\n    set: function(val) {\n      this._definition.specification = val;\n    }\n  });\n\n  Object.defineProperty(this, 'override', {\n    get: function() {\n        return this._definition.override;\n    },\n    set: function(val) {\n      this._definition.override = val;\n    }\n  });  \n\n};\n\n\n/**\n * Inspect the current state of the object\n * and determine if we have sufficient information\n * to render the chart\n * @return {object} Hash of the draw state + any missing requirements\n */\nCedar.prototype.canDraw = function(){\n\n  //dataset?\n  //dataset.url || dataset.data?\n  //dataset.mappings?\n  //specification?\n  //specification.template?\n  //specification.inputs?\n  //specification.inputs ~ dataset.mappings?\n  \n  return {drawable:true, errs:[]};\n\n};\n\n/**\n * Render a chart in the specified element\n * @param  {object} options \n * \n * options.elementId [required] Id of the Dom element into which the chart will be rendered\n * options.token     [optional] Token to be used if the data or spec are on a secured server\n */\nCedar.prototype.show = function(options){\n  if(this._pendingXhr){\n    \n    this._addToMethodQueue('show', [options]);\n\n  }else{\n\n    var err;\n    //ensure we got an elementId\n    if( !options.elementId ){\n      err= \"Cedar.show requires options.elementId\";\n    }\n    //check if element exists in the page\n    if(d3.select(options.elementId)[0][0] === null){\n      err = \"Element \" + options.elementId + \" is not present in the DOM\";\n     }\n  \n    //hold onto the id\n    this._elementId = options.elementId;\n    this._renderer = options.renderer || \"canvas\"; //default to canvas\n\n    //hold onto the token\n    if(options.token){\n      this._token = options.token;\n    }\n\n    if( err ){\n      throw new Error( err );\n    }\n    var chk = this.canDraw();\n    if(chk.drawable){\n      //update centralizes the spec compilation & drawing\n      this.update();  \n    }else{\n      //report the issues\n      var errs = chk.issues.join(',');\n      throw new Error('Chart can not be drawn because: ' + errs);  \n    }\n    \n  }\n};\n\n/**\n * Render the chart using the internal state\n * Should be called after a user modifies the \n * of the dataset, query, mappings or template\n */\nCedar.prototype.update = function(){\n  var self = this;\n  \n  if ( this._view ) { \n    this.emit('update-start');\n  }\n\n  if(this._pendingXhr){\n    \n    this._addToMethodQueue('update');\n\n  }else{\n\n    if(this._view){\n      //remove handlers\n      //TODO Remove existing handlers\n      this._remove(this._view);\n    }\n    try{\n      //ensure we have required inputs or defaults \n      var compiledMappings = Cedar._applyDefaultsToMappings(this._definition.dataset.mappings, this._definition.specification.inputs); //Cedar._compileMappings(this._definition.dataset, this._definition.specification.inputs);\n\n      //compile the template + mappings --> vega spec\n      var spec = JSON.parse(Cedar._supplant(JSON.stringify(this._definition.specification.template), compiledMappings)); \n\n      // merge in user specified style overrides\n      spec = Cedar._mergeRecursive(spec, this._definition.override);\n\n      //if the spec has a url in the data node, delete it\n      if(spec.data[0].url){\n        delete spec.data[0].url;\n      }\n\n      if(this._definition.dataset.data){\n\n        //create the data node using the passed in data\n        spec.data[0].values = this._definition.dataset.data;\n        \n        //send to vega\n        this._renderSpec(spec);\n      \n      }else{\n      \n        //we need to fetch the data so\n        var url = Cedar._createFeatureServiceRequest(this._definition.dataset);\n      \n        //create a callback closure to carry the spec\n        var cb = function(err,data){\n      \n          //todo add error handlers for xhr and ags errors\n          spec.data[0].values = data;\n          console.dir(spec);\n          //send to vega\n          self._renderSpec(spec);\n\n        };\n\n        //fetch the data from the service\n        Cedar.getJson(url, cb);\n      }\n    }\n    catch(ex){\n      throw(ex);\n    }\n  }\n};\n\n/**\n * Render a fully cooked spec\n */\nCedar.prototype._renderSpec = function(spec){\n  var self = this;\n  try{\n    //use vega to parse the spec \n    //it will handle the spec as an object or url\n    vg.parse.spec(spec, function(chartCtor) { \n\n      //create the view\n      self._view = chartCtor({\n        el: self._elementId,\n        renderer: self._renderer\n      });\n\n      \n      //render into the element\n      self._view.update(); \n\n      //attach event proxies\n      self._attach(self._view);\n\n      if ( self._view ) { \n        self.emit('update-end');\n      }\n\n    });\n  }\n  catch(ex){\n    throw(ex);\n  }\n};\n\n/**\n * highlight marker based on attribute value\n */\nCedar.prototype.select = function( opt ) {\n  var self = this;\n  var view = this._view;\n  var items = view.model().scene().items[0].items[0].items;\n\n  items.forEach(function(item) {\n    if ( item.datum.data.attributes[opt.key] === opt.value ) {\n      if ( item.hasPropertySet(\"hover\") ) {\n        self._view.update({props:\"hover\", items:item});\n      }\n    }\n  });\n\n};\n\n\n/**\n * highlight marker based on attribute value\n */\nCedar.prototype.clearSelection = function( opt ) {\n  var self = this;\n  var view = this._view;\n  var items = view.model().scene().items[0].items[0].items;\n\n  if ( opt && opt.key ) {\n    items.forEach(function(item) {\n      if ( item.datum.data.attributes[opt.key] === opt.value ) {\n        self._view.update({props:\"update\", items:item});\n      }\n    });\n  } else {\n    //clear all \n    self._view.update();\n  }\n\n};\n\n\n// trigger callback \nCedar.prototype.emit = function(eventName) {\n  if (this._view._handler._handlers[ eventName ]){\n    this._view._handler._handlers[ eventName ][0].handler();\n  }\n};\n\n/**\n * Attach the generic proxy handlers to the chart view\n */\nCedar.prototype._attach = function(view){\n  \n  view.on('mouseover', this._handler('mouseover'));\n  view.on('mouseout', this._handler('mouseout'));\n  view.on('click', this._handler(\"click\"));\n  view.on('update-start', this._handler('update-start'));\n  view.on('update-end', this._handler('update-end'));\n  \n};\n\n/**\n * Remove all event handlers from the view\n */\nCedar.prototype._remove = function(view){\n\n  view.off('mouseover');\n  view.off('mouseout');\n  view.off('click');\n  view.off('update-start');\n  view.off('update-end');\n  \n};\n\n/**\n * Helper function that validates that the \n * mappings hash contains values for all\n * the inputs\n * @param  {array} inputs   Array of inputs\n * @param  {object} mappings Hash of mappings\n * @return {array}          Missing mappings\n */\nCedar._validateMappings = function(inputs, mappings){\n  var missingInputs = [], input;\n  for(var i=0;i<inputs.length;i++){\n    input = inputs[i];\n    if(input.required){\n      if(!mappings[input.name]){\n        missingInputs.push(input.name);\n      }\n    }\n  }\n  return missingInputs;\n};\n\n/**\n * Validate that the incoming data has the fields expected\n * in the mappings\n */\nCedar._validateData = function(data, mappings){\n  var missingInputs = [];\n  if(!data.features || !Array.isArray(data.features)){\n    throw new Error('Data is expected to have features array!');\n  }\n  var firstRow = data.features[0].attributes;\n  for(var key in mappings){\n    var fld = Cedar._getMappingFieldName(key, mappings[key].field);\n    if(!firstRow.hasOwnProperty(fld)){\n      missingInputs.push(fld);\n    }\n  }\n  return missingInputs;\n};\n\n/**\n * Centralize and abstract the computation of\n * expected field names, based on the mapping name\n */\nCedar._getMappingFieldName = function(mappingName, fieldName){\n  var name = fieldName;\n  if(mappingName.toLowerCase() === 'count'){\n    name = fieldName + '_SUM';\n  }\n  return name;\n};\n\n/**\n * Return a default definition object\n */\nCedar._defaultDefinition = function(){\n  var defn = {\n    \"dataset\": {\n      \"query\": this._defaultQuery()\n    },\n    \"template\":{}\n  };\n\n  defn.dataset.query = Cedar._defaultQuery();\n\n  return defn;\n};\n\n/**\n * Default Query Object\n */\nCedar._defaultQuery = function(){\n  var defaultQuery = {\n    \"where\": \"1=1\",\n    \"returnGeometry\": false,\n    \"returnDistinctValues\": false,\n    \"returnIdsOnly\": false,\n    \"returnCountOnly\": false,\n    \"outFields\": \"*\",\n    \"f\": \"json\"\n  };\n  return defaultQuery;\n};\n\n\n\n/**\n * Generic event handler proxy\n */\nCedar.prototype._handler = function(evtName) {\n  var self = this;\n  \n  //return a handler function w/ the events hash closed over\n  var handler = function(evt, item){\n    self._events.forEach( function(registeredHandler){\n      if(registeredHandler.type === evtName){\n        //invoke the callback with the data\n        if ( item ) {\n          registeredHandler.callback(item.datum.data.attributes);\n        } else {\n          registeredHandler.callback();\n        }\n      }\n    });\n  };\n  return handler;\n};\n\n/**\n * Add a handler for the named event\n */\nCedar.prototype.on = function(evtName, callback){\n  this._events.push({\"type\":evtName, \"callback\":callback});\n};\n\n/**\n * Remove a handler for the named event\n */\nCedar.prototype.off = function(evtName /*, callback */){\n  console.log('Handler for ' + evtName +' removed...');\n};\n\n\n/**\n * Creates an entry in the method queue, excuted \n * once a pending xhr is completed \n */\nCedar.prototype._addToMethodQueue = function(name, args){\n  this._methodQueue.push({ method: name, args: args });\n};\n\n/**\n * empties the method queue by calling the queued methods\n * This helps build a more syncronous api, while still\n * doing async things in the code\n */\nCedar.prototype._purgeMethodQueue = function(){\n  var self = this;\n  if(self._methodQueue.length > 0){\n\n    for(var i=0;i<self._methodQueue.length;i++){\n      var action = self._methodQueue[i];\n      self[action.method].apply(self, action.args);  \n    }\n  }\n};\n\n/**\n * fetch json from a url\n * @param  {string}   url      Url to json file\n * @param  {Function} callback node-style callback function (err, data)\n */\nCedar.getJson = function( url, callback ){\n  d3.json(url, function(err,data) {\n    if(err){\n      callback('Error loading ' + url + ' ' + err.message);\n    }\n    callback(null, data);\n  });\n};\n\n\n\n\n/**\n * Given a dataset hash, create the feature service\n * query string\n */\n\nCedar._createFeatureServiceRequest = function( dataset ){\n  var mergedQuery;\n  //ensure that we have a query\n  if(dataset.query){\n    mergedQuery = _.clone(dataset.query);\n    //ensure we have all needed properties on the query\n    //TODO: use a microlib instead of underscore\n    _.defaults(mergedQuery, Cedar._defaultQuery());\n  }else{\n    mergedQuery = Cedar._defaultQuery();\n  }\n  //Handle bbox\n  if(mergedQuery.bbox){\n    //make sure a geometry was not also passed in\n    if(mergedQuery.geometry){\n      throw new Error('Dataset.query can not have both a geometry and a bbox specified');\n    }\n    //get the bbox (W,S,E,N)\n    var bboxArr = mergedQuery.bbox.split(',');\n\n    //remove it so it's not serialized as-is\n    delete mergedQuery.bbox;\n\n    //cook it into a json string \n    mergedQuery.geometry = JSON.stringify({\"xmin\": bboxArr[0], \"ymin\": bboxArr[2],\"xmax\": bboxArr[1], \"ymax\": bboxArr[3] });\n    //set the spatial ref as geographic\n    mergedQuery.inSR = '4326';\n  }\n  if(dataset.mappings.group) {\n      mergedQuery.groupByFieldsForStatistics = dataset.mappings.group.field;\n  }\n  if(dataset.mappings.count) {\n    mergedQuery.orderByFields = dataset.mappings.count.field + \"_SUM\";\n    mergedQuery.outStatistics = JSON.stringify([{\"statisticType\": \"sum\", \"onStatisticField\": dataset.mappings.count.field, \"outStatisticFieldName\": dataset.mappings.count.field + \"_SUM\"}]);\n  }\n\n\n\n  //iterate the mappings keys to check for sort\n  //-----------------------------------------------------------------\n  //This approach would seem 'clean' but if there are multiple fields\n  //to sort by, the order would be determined by how javascript decides to\n  //iterate the mappings property hash.\n  //Thus, using mappings.sort gives the developer explicit control\n  //-----------------------------------------------------------------\n  // var sort = [];\n  // for (var property in dataset.mappings) {\n  //   if (dataset.mappings.hasOwnProperty(property)) {\n  //     if(dataset.mappings[property].sort){\n  //       //ok - build up the sort\n  //       sort.push(dataset.mappings[property].field + ' ' + dataset.mappings[property].sort);\n  //     }\n  //   }\n  // }\n  // if(sort.length > 0){\n  //   mergedQuery.orderByFields = sort.join(',');\n  // }\n  //-----------------------------------------------------------------\n  //check for a sort passed directly in\n  if(dataset.mappings.sort){\n    mergedQuery.orderByFields = dataset.mappings.sort;\n  }\n\n  var url = dataset.url + \"/query?\" + this._serializeQueryParams(mergedQuery);\n  \n  if(dataset.token){\n    url = url + '&token=' + dataset.token;\n  }\n  \n  return url;\n};\n\nCedar._applyDefaultsToMappings = function(mappings, inputs){\n  var errs = [];\n  //loop over the inputs\n  for(var i =0; i < inputs.length; i++){\n    //get the input\n    var input = inputs[i];\n\n    //if it's required and not in the mappings, add an exception\n    if(input.required && !mappings[input.name] ){\n      errs.push(input.name);\n    }\n    \n    //if it's not required, has a default and not in the mappings\n    if(!input.required && !mappings[input.name] && input.default){\n      //add the default\n      mappings[input.name] = input.default;\n    }\n  }\n\n  if(errs.length > 0){\n    throw new Error('Required Mappings Missing: ' + errs.join(','));\n  }else{\n    return mappings;\n  }\n};\n\n\n/**\n * Token Replacement on a string\n * @param  {string} template string template\n * @param  {object} params   object hash that maps to the tokens to be replaced\n * @return {string}          string with values replaced\n */\nCedar._supplant = function( tmpl, params ){\n  return tmpl.replace(/{([^{}]*)}/g,\n    function (a, b) {\n      var r = Cedar._getTokenValue(params, b);\n      return typeof r === 'string' || typeof r === 'number' ? r : a;\n    }\n  );\n};\n\n/*\n* Recursively merge properties of two objects \n*/\nCedar._mergeRecursive = function(obj1, obj2) {\n  for (var p in obj2) {\n    try {\n      // Property in destination object set; update its value.\n      if ( obj2[p].constructor===Object || obj2[p].constructor===Array) {\n        obj1[p] = Cedar._mergeRecursive(obj1[p], obj2[p]);\n\n      } else {\n        obj1[p] = obj2[p];\n\n      }\n\n    } catch(e) {\n      // Property in destination object not set; create it and set its value.\n      obj1[p] = obj2[p];\n\n    }\n  }\n\n  return obj1;\n};\n\n/**\n * Get the value of a token from a hash\n * @param  {[type]} tokens    [description]\n * @param  {[type]} tokenName [description]\n * @return {[type]}           [description]\n * Pulled from gulp-token-replace (MIT license)\n * https://github.com/Pictela/gulp-token-replace/blob/master/index.js\n * \n */\nCedar._getTokenValue = function(tokens, tokenName) {\n  var tmpTokens = tokens;\n  var tokenNameParts = tokenName.split('.');\n  for (var i = 0; i < tokenNameParts.length; i++) {\n    if (tmpTokens.hasOwnProperty(tokenNameParts[i])) {\n      tmpTokens = tmpTokens[tokenNameParts[i]];\n    } else {\n      return null;\n    }\n  }\n  return tmpTokens;\n};\n\n/**\n * Serilize an object into a query string\n * @param  {object} params Params for the query string\n * @return {string}        query string\n */\nCedar._serializeQueryParams = function(params) {\n  var str = [];\n  for(var p in params){\n    if (params.hasOwnProperty(p)) {\n      str.push(encodeURIComponent(p) + \"=\" + encodeURIComponent(params[p]));\n    }\n  }\n  var queryString = str.join(\"&\");\n  return queryString;\n};\n\nwindow.Cedar = Cedar;\n\n})(window);"]}